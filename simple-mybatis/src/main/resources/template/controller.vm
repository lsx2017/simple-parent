package ${module.controllerPkgName};

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.simple.common.controller.BaseController;
import com.simple.common.utils.Page;
import com.simple.common.utils.Result;
import ${module.entityPkgName}.${tableInfo.entityName};
import ${module.servicePkgName}.${tableInfo.entityName}Service;



#set ($serviceName=${tableInfo.varName}+"Service")

/**
 * 
 * @author ${tableInfo.author}
 * @date ${tableInfo.createDate}
 */
@Controller
@RequestMapping("${module.moduleName}/${tableInfo.varName}")
public class ${tableInfo.entityName}Controller extends BaseController<${tableInfo.entityName}, Long> {

    @Autowired
    private ${tableInfo.entityName}Service ${serviceName};
    
	@RequestMapping("list")
	public String list(Page<Map<String, Object>> page, Map<String, Object> params, ModelMap model) {
		
		dataDictService.setPageDataList(page, params);
		model.put("page", page);
		
		return "/${module.moduleName}/${tableInfo.varName}/${tableInfo.varName}_list";	
	}


    @RequestMapping("edit")
    public String edit(${tableInfo.entityName} ${tableInfo.varName}, ModelMap model) {

        if (${tableInfo.varName}.getDictId() != null) {
            ${tableInfo.varName} = ${serviceName}.get(${tableInfo.varName}.getDictId());
        } 

        model.put("bean", ${tableInfo.varName});

        return "${module.moduleName}/${tableInfo.varName}/${tableInfo.varName}_edit";
    }


    @ResponseBody
    @RequestMapping("save")
    public Result save(${tableInfo.entityName} ${tableInfo.varName}) {
          
		${serviceName}.create(${tableInfo.varName});
		return Result.SUCCESS;
    }
    
	
	@ResponseBody
	@RequestMapping("remove")
	public Result remove(Long id) {

		try {
			${serviceName}.deleteById(id);
			return Result.SUCCESS;
		} catch (Exception e) {
			e.printStackTrace();
			return Result.FAILURE;
		}

	}
    
    
}
