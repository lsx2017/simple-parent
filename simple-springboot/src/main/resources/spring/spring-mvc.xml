<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
 

           
	<!--   -->
	<annotation-driven conversion-service="conversionService">
		<argument-resolvers>
			<beans:bean class="cn.simple.common.springmvc.PropertyFiltersArgumentResolver" />
		</argument-resolvers>
		<!-- 
		<message-converters>
			<beans:bean class="cn.simple.common.springmvc.ConfigurableStringHttpMessageConverter">
				<beans:constructor-arg value="utf-8" />
			</beans:bean> 
		</message-converters>
		 -->
		<message-converters register-defaults="true">
            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <beans:bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <beans:property name="supportedMediaTypes">
                    <beans:list>
                        <beans:value>application/json;charset=UTF-8</beans:value>
                    </beans:list>
                </beans:property>
            </beans:bean>
        </message-converters>
		
	</annotation-driven>
	<!-- 转换器 -->
	<beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<beans:property name="formatters">
			<beans:bean class="cn.simple.common.springmvc.OrderTypeFormatter" />
			
		</beans:property>
	</beans:bean>
 	<!-- 
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/system/*"/>
			<mvc:mapping path="/oa/*"/>
			<mvc:mapping path="/cform/*"/>
			<mvc:mapping path="/workflow/*"/>
			<beans:bean class="cn.simple.platform.filter.AuthInterceptor"></beans:bean> 
		</mvc:interceptor>
	</mvc:interceptors>
	  -->     
	<beans:bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
		<beans:property name="exceptionMappings">  
			<beans:props>  
				<beans:prop key="java.lang.Throwable">common/500</beans:prop>
            </beans:props>  
		</beans:property>  
	</beans:bean> 
	
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" p:order="1"/>  
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">  
        <property name="definitions">  
            <list>  
                <value>classpath:tiles.xml</value>  
            </list>  
        </property>  
    </bean>  
	<!-- 基于JSP的视图解析器，这个要放在所有的视图解析器之后！ -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/jsp/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 静态资源访问（不拦截此目录下的东西的访问）
    <mvc:resources location="/res/"  mapping="/res/**" />  
 --> 
	<!-- 处理文件上传
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	 -->

	<mvc:default-servlet-handler/>

	
	<!-- 扫描Controller注解的Bean -->
	<context:component-scan base-package="cn.simple" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	
</beans:beans>